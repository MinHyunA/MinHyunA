import Cocoa

struct AAA{
    var a = 10
    var b:Int
    var c:Int
    
    init(){ // 기본 생성자 형태. 내가 생성을 하겠다!
        print("기본 생성자 -> a의 기본값 : \(a)")
        b = 222 // 초기화 되지 않은 프로퍼티는 반두시 초기화 해야 함.
        c = 333
        a = 111 // init을 함으로써 가능해짐. 초기화된 프로퍼티도 대입가능.
        // 프로퍼티의 값을 지정하는 것이 목적. 즉 최종값을 결정.
    }
    
    init(_ b:Int){ // 사용자 정의 생성자
        print("사용자 정의 생성자1")
        self.b = b // 프로퍼티 = 매개변수로 받을 것이다.
        c = 3030
        a = 1010
        c = fn_1(aa:a, bb:b) // 모든 프로퍼티 초기화 후, 메소드 호출 가능
    }
    
    func fn_1(aa:Int, bb:Int)->Int{
        print("fn_1() 실행 : \(aa), \(bb)")
        return 1234 // 리턴값을 프로퍼티에 대입.
    }
    
    func ppp(){
        print("\(a), \(b), \(c)")
    }
}

//var a1 = AAA(b:20, c:20) // 정의되지 않은 생성자로 생성 불가.
var a1 = AAA() // 생성자가 있기 때문에 거기서 b,c의 생성값을 생성해야함.
var a2 = AAA(2424)
a1.ppp()
a2.ppp() // b를 매개변수화 시켰기때문에, Int를 집어 넣으면 사용자 정의 생성자의 영향을 받아서 결과값이 나오게됨.
